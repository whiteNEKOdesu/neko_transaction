<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="neko.transaction.product.mapper.OrderDetailInfoMapper">
    <select id="getByIdUid" resultType="neko.transaction.product.entity.OrderDetailInfo">
        select order_detail_info.* from order_detail_info
        join order_info
        on order_detail_info.order_id = order_info.order_id
        where order_detail_info.order_detail_id = #{orderDetailId} and order_info.uid = #{uid}
    </select>

    <select id="sellerSelfPageQuery" resultType="neko.transaction.product.vo.OrderDetailInfoVo">
        select order_detail_info.*, order_info.uid from order_detail_info
        join order_info
        on order_detail_info.order_id = order_info.order_id
        <where>
            order_detail_info.seller_uid = #{sellerUid}
            <if test="@org.springframework.util.StringUtils@hasText(queryWords)">
                and order_detail_info.product_name like concat(#{queryWords},'%')
            </if>
            <if test="@cn.hutool.core.util.ObjectUtil@isNotNull(status)">
                and order_detail_info.status = #{status}
            </if>
        </where>
        order by order_detail_info.order_detail_id desc
        limit #{start}, #{limited}
    </select>

    <select id="sellerSelfPageQueryNumber" resultType="int">
        select count(order_detail_id) from order_detail_info
        <where>
            seller_uid = #{sellerUid}
            <if test="@org.springframework.util.StringUtils@hasText(queryWords)">
                and product_name like concat(#{queryWords},'%')
            </if>
            <if test="@cn.hutool.core.util.ObjectUtil@isNotNull(status)">
                and status = #{status}
            </if>
        </where>
    </select>

    <select id="isReceivedOrderDetailInfoExist" resultType="boolean">
        select count(order_info.order_id) = 1 from order_info
        join order_detail_info
        on order_info.order_id = order_detail_info.order_id
        where order_info.order_id = #{orderId} and order_info.uid = #{uid} and order_detail_info.product_id = #{productId}
          and order_detail_info.status = ${@neko.transaction.commonbase.utils.entity.OrderDetailInfoStatus@RECEIVED}
    </select>

    <select id="statusAggCount" resultType="neko.transaction.product.vo.OrderDetailStatusAggVo">
        select (case
            when status = 0 then '待收货'
            when status = 1 then '已收货'
            when status = 2 then '申请退货中'
            else '已退货' end
        ) status, count(status) number from order_detail_info
        group by status
    </select>
</mapper>
